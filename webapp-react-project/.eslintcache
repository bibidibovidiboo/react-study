[{"C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\index.js":"1","C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\App.js":"2","C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\reportWebVitals.js":"3","C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\MovieDetail.js":"4","C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\MovieList.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":571,"mtime":1607654429155,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":116,"mtime":1607651243097,"results":"10","hashOfConfig":"7"},{"size":4093,"mtime":1607654410070,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"fpjb4t",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\index.js",[],["26","27"],"C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\App.js",["28"],"import logo from './logo.svg';\nimport './App.css';\nimport React,{Component} from 'react'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport MovieDetail from \"./MovieDetail\";\nimport MovieList from \"./MovieList\";\n\nclass App extends Component{\n    render(){\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path={\"/\"} component={MovieList}/>\n                    <Route path={\"/detail:no\"} component={MovieDetail}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;","C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\reportWebVitals.js",[],"C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\MovieDetail.js",["29"],"import React,{Component} from 'react'\r\n\r\nclass MovieDetail extends Component {\r\n\r\n\r\n}\r\n\r\nexport default MovieDetail;","C:\\Users\\rkqtj\\WebstormProjects\\webapp-react-project\\src\\MovieList.js",["30","31","32"],"import React, {Component, Fragment} from 'react'\r\nimport axios from 'axios'\r\nclass MovieList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            movie:[],\r\n            page:1,\r\n            totalpage:0,\r\n            cateno:1\r\n        }\r\n        // 이벤트 등록\r\n        this.prev=this.prev.bind(this)\r\n        this.next=this.next.bind(this)\r\n    }\r\n    // 메모리에 HTML을 전송하기 전상태 => 데이터를 받는다\r\n    componentWillMount() {\r\n        this.post()\r\n    }\r\n    prev()\r\n    {\r\n        this.state.page=this.state.page>1?this.state.page-1:this.state.page\r\n        this.post()\r\n    }\r\n    next()\r\n    {\r\n        this.state.page=this.state.page<this.state.total?this.state.page+1:this.state.page\r\n        this.post()\r\n    }\r\n    change(cateno)\r\n    {\r\n        this.setState({cateno:cateno})\r\n        this.post()\r\n    }\r\n    // 사용자 정의는 자동 호출이 불가능 => 호출\r\n    post()\r\n    {\r\n        axios.get(\"http://localhost/webapp/movie/total.do\",{\r\n            params:{\r\n                cateno:this.state.cateno\r\n            }\r\n        }).then((response)=>{\r\n            this.setState({total:response.data})\r\n        })\r\n\r\n        axios.get(\"http://localhost/webapp/movie/list.do\",{\r\n            params:{\r\n                page:this.state.page,\r\n                cateno:this.state.cateno\r\n            }\r\n        }).then((response)=>{\r\n            this.setState({movie:response.data})\r\n        })\r\n    }\r\n    // 화면 출력하는 위치\r\n    render() {\r\n        const html=this.state.movie.map((m)=>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"thumbnail\">\r\n                    <a href=\"#\">\r\n                        <img src={m.poster} alt=\"Lights\" style={{\"width\":\"100%\"}}/>\r\n                        <div className=\"caption\">\r\n                            <p>{m.title}</p>\r\n                            <p>{m.genre}({m.score})</p>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n        return (\r\n            <Fragment>\r\n                <h1 className={\"text-center\"}>영화 목록</h1>\r\n                <div style={{\"height\":\"50px\"}}></div>\r\n                <div className={\"row\"}>\r\n                    <input type={\"button\"} className={\"btn btn-sm btn-primary\"}\r\n                           value={\"현재상영영화\"} onClick={this.change.bind(this,1)}\r\n                    />\r\n                    <input type={\"button\"} className={\"btn btn-sm btn-success\"}\r\n                           value={\"개봉예정영화\"} onClick={this.change.bind(this,2)}\r\n                    />\r\n                    <input type={\"button\"} className={\"btn btn-sm btn-warning\"}\r\n                           value={\"박스오피스(주간)\"} onClick={this.change.bind(this,3)}\r\n                    />\r\n                    <input type={\"button\"} className={\"btn btn-sm btn-danger\"}\r\n                           value={\"박스오피스(월간)\"} onClick={this.change.bind(this,4)}\r\n                    />\r\n                    <input type={\"button\"} className={\"btn btn-sm btn-info\"}\r\n                           value={\"박스오피스(연간)\"} onClick={this.change.bind(this,5)}\r\n                    />\r\n                </div>\r\n                <div style={{\"height\":\"15px\"}}></div>\r\n                <div className={\"row\"}>\r\n                    {html}\r\n                </div>\r\n                <div style={{\"height\":\"15px\"}}></div>\r\n                <div className={\"row\"}>\r\n                    <div className={\"text-center\"}>\r\n                        <input type={\"button\"} className={\"btn btn-sm btn-danger\"}\r\n                               value={\"이전\"} onClick={this.prev}/>\r\n                        {this.state.page} page / {this.state.total} pages\r\n                        <input type={\"button\"} className={\"btn btn-sm btn-success\"}\r\n                               value={\"다음\"} onClick={this.next}/>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default MovieList;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":22,"column":9,"nodeType":"44","endLine":22,"endColumn":19},{"ruleId":"42","severity":1,"message":"43","line":27,"column":9,"nodeType":"44","endLine":27,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":60,"column":21,"nodeType":"47","endLine":60,"endColumn":33},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]